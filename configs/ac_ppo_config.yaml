experiment:
  # env examples:
    # "MiniGrid-FourRooms-v0"
    # "CustomMountainCar-v0"
    # "CartPole-v1"
    # "Pendulum-v1"
  env_import: "LV2Populations-v0"
  name: "lv2pop_1env_3Msteps_ttp_random_init_state_9k_termination_linear_norm"  # 
  description: "PPO Experiment"
  save_path: "./runs"
  num_envs: 1

training:
  timesteps: 3000000   # used for train and resume
  use_set_transformer: false

  # Evaluation during training
  eval_freq: 25000
  n_eval_episodes: 25  # one is enough when initial state is fixed
  eval_deterministic: true
  
  # Checkpointing
  save_freq: 600000
  save_best_model: true

environment:
  agent_type: "spatial"  # spatial / bulk
  reward_type: "TTP"  # TTP (time to progression) / TB (tumor burden)
  observation_type: "stacked"  # stacked / stacked_pop_norm


  params:
    dt: 0.5  # default is 0.01
    growth_rates: [0.035, 0.027]  # S, R
    death_rates: [0.0, 0.0]
    carrying_capacity: 10000.0
    drug_efficiency: 1.5
    max_episode_steps: 3000

  init_state:
    s_counts: [7000.0]
    r_counts: [1.0]

  # init_low:
  #   s_counts: 1.0e-3
  #   r_counts: 1.0e-3
    
  # init_high:
  #   s_counts: 4.0e+3
  #   r_counts: 4.0e+3

  stochastic_action: false
  aggregation_type: "avg"  # min / avg / sum
  termination_type: null  # first / half / all
  # terminating when total population reaches x1.2 from starting population

normalization:
  enabled: true
  norm_obs: true
  norm_reward: false

algorithm:
  name: "PPO"
  
  # Core hyperparameters
  hyperparameters:
    learning_rate: 3.0e-4
    batch_size: 256
    n_epochs: 10
    n_steps: 8192
    gamma: 0.9999
    gae_lambda: 0.98
    clip_range: 0.2
    clip_range_vf: null
    ent_coef: 0.02
    vf_coef: 0.5
    max_grad_norm: 0.5
    use_sde: false
    sde_sample_freq: -1
    target_kl: null

    features_dim: 64
    d_model: 32
    num_heads: 2
    num_layers: 1
    dropout: 0.1

  tuning:
    enabled: true
    num_trials: 10
    search_space:
      learning_rate: ['log', 1.0e-4, 1.0e-4]
      # gamma: ['log', 0.99, 0.999]
      # gae_lambda: ['linear', 0.90, 0.99]
      # clip_range: ['linear', 0.05, 0.25]
      # ent_coef: ['linear', 0.03, 0.055]



# Testing/evaluation settings
evaluation:
  eval_type: "visual"  # visual / numeric
  test_only_fixed_policy: false
  fixed_policy_type: "Threshold"  # MTD / Threshold / Adaptive
  episodes: 1
  model_type: "best"
  model_path: null
  trial_to_eval: null
  deterministic: true
  render_mode: "rgb_array"
  save_trajectories: false

# Reproducibility
seed: 42
deterministic_pytorch: true